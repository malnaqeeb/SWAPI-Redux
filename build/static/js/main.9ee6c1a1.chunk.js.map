{"version":3,"sources":["components/Spinner.js","components/filmlist/js/FilmsList.js","actions/filmslist.js","actions/types.js","components/film/js/DisplyFilmInfo.js","components/film/js/GetFilmInfo.js","actions/filmdetails.js","reducers/filmslist.js","reducers/filmdetails.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","Spinner","classes","React","useState","progress","setProgress","useEffect","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval","className","LinearProgress","variant","value","connect","state","filmslist","getFilms","dispatch","a","fetch","res","ok","Error","json","getData","type","payload","results","msg","response","statusText","status","map","film","key","uuidv4","to","url","slice","title","FilmsCharacters","filmcharacters","filmInfo","input","setInput","filterDisplay","setFilterDisplay","cover","MoviesCover","filter","name","src","alt","story","director","producer","release_date","onChange","e","length","filteredList","person","toLowerCase","includes","handleChange","target","placeholder","character","style","birth_year","eye_color","gender","hair_color","films","starships","starship","vehicles","vehicle","filmdetails","getCharacters","userId","data","characters","opening_crawl","Promise","all","then","species","specie","homeworld","created","push","match","params","id","DisplyFilmInfo","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","FilmsList","GetFilmInfo","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ee6c1a1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default function Spinner() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((oldProgress) => {\r\n        if (oldProgress === 100) {\r\n          return 0;\r\n        }\r\n        const diff = Math.random() * 10;\r\n        return Math.min(oldProgress + diff, 100);\r\n      });\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"determinate\" value={progress} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getFilms } from \"../../../actions/filmslist\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../../Spinner\";\r\nimport \"../css/filmlist.css\";\r\n\r\nconst FilmsList = ({ getFilms, filmslist }) => {\r\n  useEffect(() => {\r\n    getFilms();\r\n  }, [getFilms]);\r\n  return (\r\n    <div>\r\n      <div className=\"home-header\">\r\n        <h1>Stars War</h1>\r\n      </div>\r\n      <div className=\"movie-container\">\r\n        <ul className=\"films-list\">\r\n          {filmslist ? (\r\n            filmslist.map((film) => (\r\n              <li className=\"film-item\" key={uuidv4()}>\r\n                <div className=\"movie-content\">\r\n                  <Link to={`/${film.url.slice(-2)}`}>\r\n                    <h2>{film.title}</h2>\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilmsList.propTypes = {\r\n  getFilms: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filmslist: state.filmslist,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getFilms })(FilmsList);\r\n","import { GET_MOVIES, MOVIES_ERROR } from \"./types\";\r\n\r\n// Get all Movies\r\n\r\nexport const getFilms = () => async (dispatch) => {\r\n  try {\r\n    const res = await fetch(\"https://swapi.dev/api/films\");\r\n    if (!res.ok) {\r\n      throw new Error(\"sometheing went wrong\");\r\n    }\r\n    const getData = await res.json();\r\n    dispatch({\r\n      type: GET_MOVIES,\r\n      payload: getData.results,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: MOVIES_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","export const GET_MOVIES = \"GET_MOVIES\";\r\nexport const MOVIES_ERROR = \"MOVIES_ERROR\";\r\nexport const MOVIE_CHARACTERS = \"MOVIE_CHARACTERS\";\r\nexport const MOVIE_INFO = \"MOVIE_INFO\";\r\n","import React, { useState } from \"react\";\r\n// import { Input } from \"semantic-ui-react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport MoviesCover from \"../../../PHOTO.json\";\r\nimport \"../css/UserItem.css\";\r\nimport \"../css/UsersList.css\";\r\nimport \"../css/input.css\";\r\n\r\nconst FilmsCharacters = ({ filmcharacters, filmInfo }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [filterDisplay, setFilterDisplay] = useState(filmcharacters);\r\n\r\n  const cover = MoviesCover.filter((cover) => cover.name === filmInfo.title);\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e);\r\n    if (e.length > 2) {\r\n      let filteredList = [];\r\n      filteredList = filmcharacters.filter((person) =>\r\n        person.name.toLowerCase().includes(input)\r\n      );\r\n      setFilterDisplay(filteredList);\r\n    } else {\r\n      setFilterDisplay(filmcharacters);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"movie-container\">\r\n      <div className=\"wrapper-header\">\r\n        <div className=\"box1-header\">\r\n          <img src={cover[0].src} alt={filmInfo.title} />\r\n        </div>\r\n        <div className=\"box2-header\">\r\n          <div className=\"box2-header-1\">\r\n            <h1>{filmInfo.title}</h1>\r\n            <p>{filmInfo.story}</p>\r\n          </div>\r\n          <div className=\"box2-header-2\">\r\n            {\" \"}\r\n            <h3>Director:</h3>\r\n            <p>{filmInfo.director}</p>\r\n            <h3>Producer:</h3>\r\n            <p>{filmInfo.producer}</p>\r\n            <h3>Release Date</h3>\r\n            <p>{filmInfo.release_date}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"input-field\">\r\n        <input\r\n          onChange={(e) => handleChange(e.target.value)}\r\n          placeholder=\"Search (type at least 3 letters)\"\r\n          className=\"input-field\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <ul>\r\n          {filterDisplay &&\r\n            filterDisplay.map((character) => (\r\n              <li key={uuidv4()} className=\"wrapper-li-content\">\r\n                <div className=\"box box1\">\r\n                  <div className=\"box1-row1\">\r\n                    <img\r\n                      src=\"https://i.postimg.cc/HnSM4tjH/C-3PO1.jpg\"\r\n                      alt={character.name}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"box1-row2\">\r\n                    <h3>{character.name}</h3>\r\n                  </div>\r\n                </div>\r\n                <div className=\"box box2\" style={{ width: \"100%\" }}>\r\n                  <div className=\"more-info\">\r\n                    <h5>Birth Year:</h5> <span>{character.birth_year}</span>\r\n                  </div>\r\n                  <div className=\"more-info\">\r\n                    <h5>Eye Color:</h5>\r\n                    <span>{character.eye_color}</span>\r\n                  </div>\r\n                  <div className=\"more-info\">\r\n                    <h5>Gender:</h5>\r\n                    <span>{character.gender}</span>\r\n                  </div>\r\n                  <div className=\"more-info\">\r\n                    <h5>Hair Color:</h5>\r\n                    <span>{character.hair_color}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"box box3\">\r\n                  <div style={{ width: \"100%\" }}>\r\n                    <h4> Films:</h4>\r\n                    {character.films.map((film) => (\r\n                      <p>{film}</p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"box box4\">\r\n                  <div style={{ width: \"100%\" }}>\r\n                    <h4>Starships:</h4>{\" \"}\r\n                    {character.starships.length > 0 ? (\r\n                      character.starships.map((starship) => <p>{starship}</p>)\r\n                    ) : (\r\n                      <p>N/A</p>\r\n                    )}\r\n                    <h4>Vehicles:</h4>{\" \"}\r\n                    {character.vehicles.length > 0 ? (\r\n                      character.vehicles.map((vehicle) => <p>{vehicle}</p>)\r\n                    ) : (\r\n                      <p>N/A</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilmsCharacters;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCharacters } from \"../../../actions/filmdetails\";\r\nimport Spinner from \"../../Spinner\";\r\nimport DisplyFilmInfo from \"./DisplyFilmInfo\";\r\n\r\nconst GetFilmInfo = ({\r\n  getCharacters,\r\n  filmdetails: { filmcharacters, filmInfo },\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getCharacters(match.params.id);\r\n  }, [getCharacters, match.params.id]);\r\n\r\n  return (\r\n    <div>\r\n      {filmcharacters && filmInfo ? (\r\n        <div>\r\n          <DisplyFilmInfo filmcharacters={filmcharacters} filmInfo={filmInfo} />\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nGetFilmInfo.propTypes = {\r\n  getCharacters: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filmdetails: state.filmdetails,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCharacters })(GetFilmInfo);\r\n","import { MOVIES_ERROR, MOVIE_CHARACTERS } from \"./types\";\r\n\r\n// Get all characters\r\nexport const getCharacters = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await fetch(`https://swapi.dev/api/films/${userId}`);\r\n    if (!res.ok) {\r\n      throw new Error(\"something went wrong\");\r\n    }\r\n    const data = await res.json();\r\n    const characters = await data.characters;\r\n    const filmInfo = {\r\n      title: data.title,\r\n      story: data.opening_crawl,\r\n      director: data.director,\r\n      producer: data.producer,\r\n      release_date: data.release_date,\r\n    };\r\n\r\n    let filmcharacters = [];\r\n    // fetch array of URL's\r\n    await Promise.all(\r\n      characters.map((url) =>\r\n        fetch(url)\r\n          .then((response) => response.json())\r\n          .then(async (name) =>\r\n            filmcharacters.push({\r\n              name: name.name,\r\n              films: await Promise.all(\r\n                name.films.map((film) =>\r\n                  fetch(film)\r\n                    .then((response) => response.json())\r\n                    .then((res) => res.title)\r\n                )\r\n              ),\r\n              birth_year: name.birth_year,\r\n              eye_color: name.eye_color,\r\n              gender: name.gender,\r\n              hair_color: name.hair_color,\r\n              species: await Promise.all(\r\n                name.species.map((specie) =>\r\n                  fetch(specie)\r\n                    .then((response) => response.json())\r\n                    .then((res) => res.name)\r\n                )\r\n              ),\r\n              starships: await Promise.all(\r\n                name.starships.map((starship) =>\r\n                  fetch(starship)\r\n                    .then((response) => response.json())\r\n                    .then((res) => res.name)\r\n                )\r\n              ),\r\n              homeworld: await fetch(name.homeworld)\r\n                .then((response) => response.json())\r\n                .then((res) => res.name),\r\n              vehicles: await Promise.all(\r\n                name.vehicles.map((vehicle) =>\r\n                  fetch(vehicle)\r\n                    .then((response) => response.json())\r\n                    .then((res) => res.name)\r\n                )\r\n              ),\r\n              created: name.created,\r\n            })\r\n          )\r\n      )\r\n    );\r\n\r\n    dispatch({\r\n      type: MOVIE_CHARACTERS,\r\n      payload: { filmcharacters, filmInfo },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: MOVIES_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import { GET_MOVIES } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_MOVIES:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MOVIE_CHARACTERS, GET_MOVIES } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case MOVIE_CHARACTERS:\r\n      return payload;\r\n    case GET_MOVIES:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport filmslist from \"./filmslist\";\r\nimport filmdetails from \"./filmdetails\";\r\n\r\nexport default combineReducers({\r\n  filmslist,\r\n  filmdetails,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n    initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport FilmsList from \"./components/filmlist/js/FilmsList\";\nimport GetFilmInfo from \"./components/film/js/GetFilmInfo\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={FilmsList} />\n            <Route exact path=\"/:id\" component={GetFilmInfo} />\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}